plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.aston'
version = '0.0.1-SNAPSHOT'
apply from: 'version.gradle'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly "org.postgresql:postgresql:${versions.psql}"
	implementation "org.liquibase:liquibase-core:${versions.liquibase}"

	testImplementation "org.testcontainers:testcontainers:${versions.testcontainers}"
	testImplementation "org.testcontainers:junit-jupiter:${versions.testcontainers}"
	testImplementation "org.testcontainers:postgresql:${versions.testcontainers}"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation "ch.qos.logback:logback-core:${versions.logback}"
	testImplementation "ch.qos.logback:logback-classic:${versions.logback}"

	compileOnly "org.projectlombok:lombok:${versions.lombok}"
	annotationProcessor "org.projectlombok:lombok:${versions.lombok}"
	testCompileOnly "org.projectlombok:lombok:${versions.lombok}"
	testAnnotationProcessor "org.projectlombok:lombok:${versions.lombok}"

	implementation "org.mapstruct:mapstruct:${versions.mapstruct}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${versions.mapstruct}"
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${versions.mapstruct}"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
